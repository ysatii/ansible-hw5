- name: Ensure Vector user exists
  user:
    name: '{{ vector_user }}'
    system: true
    createhome: false
    shell: /bin/false
- name: Ensure necessary directories exist
  file:
    path: '{{ item }}'
    state: directory
    owner: '{{ vector_user }}'
    group: '{{ vector_user }}'
    mode: '0755'
  loop:
  - /var/lib/vector
  - /etc/vector
- name: Download Vector
  get_url:
    url: '{{ vector_download_url }}'
    dest: /tmp/vector.tar.gz

##########################
#- name: Extract Vector
#  unarchive:
#    src: /tmp/vector.tar.gz
#    dest: /tmp
#    remote_src: true
#    mode: '0755'


- name: Check if Vector already extracted
  stat:
    path: /tmp/vector_extracted
  register: vector_extracted

- name: Extract Vector
  unarchive:
    src: /tmp/vector.tar.gz
    dest: /tmp
    remote_src: true
    mode: '0755'
  when: not vector_extracted.stat.exists

- name: Create marker file after extraction
  file:
    path: /tmp/vector_extracted
    state: touch
  when: not vector_extracted.stat.exists

- name: Find extracted vector binary
  find:
    paths: /tmp
    patterns: "vector"
    recurse: yes
    file_type: file
  register: vector_binary

- name: Fail if vector binary not found
  fail:
    msg: "Vector binary not found in extracted archive"
  when: vector_binary.matched == 0

- name: Move Vector binary to install path
  copy:
    src: "{{ vector_binary.files[0].path }}"
    dest: /usr/bin/vector
    mode: '0755'
    remote_src: true



#- name: Ensure Vector is executable
#  file:
#    path: /usr/local/bin/vector
#    mode: '0755'
#################



- name: Deploy Vector configuration for Vector Server
  template:
    src: vector_vector.toml.j2
    dest: '{{ vector_config_file }}'
    mode: '0644'
  when: '''vector'' in group_names'
  notify: Restart Vector
- name: Deploy Vector configuration for Lighthouse
  template:
    src: vector_nginx_lighthouse.toml.j2
    dest: '{{ vector_config_file }}'
    mode: '0644'
  when: '''lighthouse'' in group_names'
  notify: Restart Vector
- name: Deploy Vector systemd service file
  copy:
    dest: /etc/systemd/system/vector.service
    content: '[Unit]

      Description=Vector service

      After=network.target


      [Service]

      User={{ vector_user }}

      ExecStart={{ vector_install_path }} --config {{ vector_config_file }}

      Restart=always

      RestartSec=5


      [Install]

      WantedBy=multi-user.target

      '
  notify: Restart Vector
- name: Ensure Vector user is in nginx group
  user:
    name: '{{ vector_user }}'
    groups: nginx
    append: true
  when: '''lighthouse'' in group_names'
- name: Change permissions for Nginx log directory
  file:
    path: /var/log/nginx
    state: directory
    owner: nginx
    group: nginx
    mode: '0755'
  when: '''lighthouse'' in group_names'
- name: Change permissions for Nginx access log
  file:
    path: /var/log/nginx/access.log
    state: file
    owner: nginx
    group: nginx
    mode: '0640'
  when: '''lighthouse'' in group_names'
- name: Change permissions for Nginx error log
  file:
    path: /var/log/nginx/error.log
    state: file
    owner: nginx
    group: nginx
    mode: '0640'
  when: '''lighthouse'' in group_names'
- name: Reload systemd
  command: systemctl daemon-reexec
  when: ansible_virtualization_type != 'docker'
- name: Enable and start Vector service
  systemd:
    name: vector
    enabled: true
    state: started
  when: ansible_virtualization_type != 'docker'
